{"ast":null,"code":"export function resolveUrl(url, baseUrl) {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url;\n  } // url is absolute already, without protocol\n\n\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url;\n  } // dataURI, mailto:, tel:, etc.\n\n\n  if (url.match(/^[a-z]+:/i)) {\n    return url;\n  }\n\n  const doc = document.implementation.createHTMLDocument();\n  const base = doc.createElement('base');\n  const a = doc.createElement('a');\n  doc.head.appendChild(base);\n  doc.body.appendChild(a);\n\n  if (baseUrl) {\n    base.href = baseUrl;\n  }\n\n  a.href = url;\n  return a.href;\n}\nexport const uuid = (() => {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0; // ref: http://stackoverflow.com/a/6248722/2519373\n\n  const random = () => // eslint-disable-next-line no-bitwise\n  `0000${(Math.random() * 36 ** 4 << 0).toString(36)}`.slice(-4);\n\n  return () => {\n    counter += 1;\n    return `u${random()}${counter}`;\n  };\n})();\nexport function delay(ms) {\n  return args => new Promise(resolve => {\n    setTimeout(() => resolve(args), ms);\n  });\n}\nexport function toArray(arrayLike) {\n  const arr = [];\n\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\n    arr.push(arrayLike[i]);\n  }\n\n  return arr;\n}\n\nfunction px(node, styleProperty) {\n  const win = node.ownerDocument.defaultView || window;\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n  return val ? parseFloat(val.replace('px', '')) : 0;\n}\n\nfunction getNodeWidth(node) {\n  const leftBorder = px(node, 'border-left-width');\n  const rightBorder = px(node, 'border-right-width');\n  return node.clientWidth + leftBorder + rightBorder;\n}\n\nfunction getNodeHeight(node) {\n  const topBorder = px(node, 'border-top-width');\n  const bottomBorder = px(node, 'border-bottom-width');\n  return node.clientHeight + topBorder + bottomBorder;\n}\n\nexport function getImageSize(targetNode) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const width = options.width || getNodeWidth(targetNode);\n  const height = options.height || getNodeHeight(targetNode);\n  return {\n    width,\n    height\n  };\n}\nexport function getPixelRatio() {\n  let ratio;\n  let FINAL_PROCESS;\n\n  try {\n    FINAL_PROCESS = process;\n  } catch (e) {// pass\n  }\n\n  const val = FINAL_PROCESS && FINAL_PROCESS.env ? FINAL_PROCESS.env.devicePixelRatio : null;\n\n  if (val) {\n    ratio = parseInt(val, 10);\n\n    if (Number.isNaN(ratio)) {\n      ratio = 1;\n    }\n  }\n\n  return ratio || window.devicePixelRatio || 1;\n} // @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\n\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n  if (canvas.width > canvasDimensionLimit || canvas.height > canvasDimensionLimit) {\n    if (canvas.width > canvasDimensionLimit && canvas.height > canvasDimensionLimit) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= canvasDimensionLimit / canvas.width;\n        canvas.width = canvasDimensionLimit;\n      } else {\n        canvas.width *= canvasDimensionLimit / canvas.height;\n        canvas.height = canvasDimensionLimit;\n      }\n    } else if (canvas.width > canvasDimensionLimit) {\n      canvas.height *= canvasDimensionLimit / canvas.width;\n      canvas.width = canvasDimensionLimit;\n    } else {\n      canvas.width *= canvasDimensionLimit / canvas.height;\n      canvas.height = canvasDimensionLimit;\n    }\n  }\n}\nexport function canvasToBlob(canvas) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (canvas.toBlob) {\n    return new Promise(resolve => {\n      canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n    });\n  }\n\n  return new Promise(resolve => {\n    const binaryString = window.atob(canvas.toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined).split(',')[1]);\n    const len = binaryString.length;\n    const binaryArray = new Uint8Array(len);\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i);\n    }\n\n    resolve(new Blob([binaryArray], {\n      type: options.type ? options.type : 'image/png'\n    }));\n  });\n}\nexport function createImage(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n\n    img.decode = () => resolve(img);\n\n    img.onload = () => resolve(img);\n\n    img.onerror = reject;\n    img.crossOrigin = 'anonymous';\n    img.decoding = 'async';\n    img.src = url;\n  });\n}\nexport async function svgToDataURL(svg) {\n  return Promise.resolve().then(() => new XMLSerializer().serializeToString(svg)).then(encodeURIComponent).then(html => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n  const xmlns = 'http://www.w3.org/2000/svg';\n  const svg = document.createElementNS(xmlns, 'svg');\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n  svg.setAttribute('width', `${width}`);\n  svg.setAttribute('height', `${height}`);\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  foreignObject.setAttribute('width', '100%');\n  foreignObject.setAttribute('height', '100%');\n  foreignObject.setAttribute('x', '0');\n  foreignObject.setAttribute('y', '0');\n  foreignObject.setAttribute('externalResourcesRequired', 'true');\n  svg.appendChild(foreignObject);\n  foreignObject.appendChild(node);\n  return svgToDataURL(svg);\n}","map":{"version":3,"mappings":"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","names":["resolveUrl","url","baseUrl","match","window","location","protocol","doc","document","implementation","createHTMLDocument","base","createElement","a","head","appendChild","body","href","uuid","counter","random","Math","toString","slice","delay","ms","args","Promise","resolve","setTimeout","toArray","arrayLike","arr","i","l","length","push","px","node","styleProperty","win","ownerDocument","defaultView","val","getComputedStyle","getPropertyValue","parseFloat","replace","getNodeWidth","leftBorder","rightBorder","clientWidth","getNodeHeight","topBorder","bottomBorder","clientHeight","getImageSize","targetNode","options","width","height","getPixelRatio","ratio","FINAL_PROCESS","process","e","env","devicePixelRatio","parseInt","Number","isNaN","canvasDimensionLimit","checkCanvasDimensions","canvas","canvasToBlob","toBlob","type","quality","binaryString","atob","toDataURL","undefined","split","len","binaryArray","Uint8Array","charCodeAt","Blob","createImage","reject","img","Image","decode","onload","onerror","crossOrigin","decoding","src","svgToDataURL","svg","then","XMLSerializer","serializeToString","encodeURIComponent","html","nodeToDataURL","xmlns","createElementNS","foreignObject","setAttribute"],"sources":["../src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}