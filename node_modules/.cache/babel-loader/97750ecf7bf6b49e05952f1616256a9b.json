{"ast":null,"code":"import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\n\nasync function cloneCanvasElement(canvas) {\n  const dataURL = canvas.toDataURL();\n\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false);\n  }\n\n  return createImage(dataURL);\n}\n\nasync function cloneVideoElement(video, options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = video.clientWidth;\n    canvas.height = video.clientHeight;\n    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const dataURL = canvas.toDataURL();\n    return createImage(dataURL);\n  }\n\n  const poster = video.poster;\n  const contentType = getMimeType(poster);\n  const dataURL = await resourceToDataURL(poster, contentType, options);\n  return createImage(dataURL);\n}\n\nasync function cloneIFrameElement(iframe) {\n  var _a;\n\n  try {\n    if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n      return await cloneNode(iframe.contentDocument.body, {}, true);\n    }\n  } catch (_b) {// Failed to clone iframe\n  }\n\n  return iframe.cloneNode(false);\n}\n\nasync function cloneSingleNode(node, options) {\n  if (node instanceof HTMLCanvasElement) {\n    return cloneCanvasElement(node);\n  }\n\n  if (node instanceof HTMLVideoElement) {\n    return cloneVideoElement(node, options);\n  }\n\n  if (node instanceof HTMLIFrameElement) {\n    return cloneIFrameElement(node);\n  }\n\n  return node.cloneNode(false);\n}\n\nconst isSlotElement = node => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\n\nasync function cloneChildren(nativeNode, clonedNode, options) {\n  var _a;\n\n  const children = isSlotElement(nativeNode) && nativeNode.assignedNodes ? toArray(nativeNode.assignedNodes()) : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n\n  if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n    return clonedNode;\n  }\n\n  await children.reduce((deferred, child) => deferred.then(() => cloneNode(child, options)).then(clonedChild => {\n    if (clonedChild) {\n      clonedNode.appendChild(clonedChild);\n    }\n  }), Promise.resolve());\n  return clonedNode;\n}\n\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n  const targetStyle = clonedNode.style;\n\n  if (!targetStyle) {\n    return;\n  }\n\n  const sourceStyle = window.getComputedStyle(nativeNode);\n\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText;\n    targetStyle.transformOrigin = sourceStyle.transformOrigin;\n  } else {\n    toArray(sourceStyle).forEach(name => {\n      let value = sourceStyle.getPropertyValue(name);\n\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n        value = `${reducedFont}px`;\n      }\n\n      targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n    });\n  }\n}\n\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\n\nfunction cloneSelectValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLSelectElement) {\n    const clonedSelect = clonedNode;\n    const selectedOption = Array.from(clonedSelect.children).find(child => nativeNode.value === child.getAttribute('value'));\n\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '');\n    }\n  }\n}\n\nfunction decorate(nativeNode, clonedNode) {\n  if (clonedNode instanceof Element) {\n    cloneCSSStyle(nativeNode, clonedNode);\n    clonePseudoElements(nativeNode, clonedNode);\n    cloneInputValue(nativeNode, clonedNode);\n    cloneSelectValue(nativeNode, clonedNode);\n  }\n\n  return clonedNode;\n}\n\nasync function ensureSVGSymbols(clone, options) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n\n  if (uses.length === 0) {\n    return clone;\n  }\n\n  const processedDefs = {};\n\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i];\n    const id = use.getAttribute('xlink:href');\n\n    if (id) {\n      const exist = clone.querySelector(id);\n      const definition = document.querySelector(id);\n\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = await cloneNode(definition, options, true);\n      }\n    }\n  }\n\n  const nodes = Object.values(processedDefs);\n\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml';\n    const svg = document.createElementNS(ns, 'svg');\n    svg.setAttribute('xmlns', ns);\n    svg.style.position = 'absolute';\n    svg.style.width = '0';\n    svg.style.height = '0';\n    svg.style.overflow = 'hidden';\n    svg.style.display = 'none';\n    const defs = document.createElementNS(ns, 'defs');\n    svg.appendChild(defs);\n\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i]);\n    }\n\n    clone.appendChild(svg);\n  }\n\n  return clone;\n}\n\nexport async function cloneNode(node, options, isRoot) {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null;\n  }\n\n  return Promise.resolve(node).then(clonedNode => cloneSingleNode(clonedNode, options)).then(clonedNode => cloneChildren(node, clonedNode, options)).then(clonedNode => decorate(node, clonedNode)).then(clonedNode => ensureSVGSymbols(clonedNode, options));\n}","map":{"version":3,"mappings":"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","names":["clonePseudoElements","createImage","toArray","getMimeType","resourceToDataURL","cloneCanvasElement","canvas","dataURL","toDataURL","cloneNode","cloneVideoElement","video","options","currentSrc","document","createElement","ctx","getContext","width","clientWidth","height","clientHeight","drawImage","poster","contentType","cloneIFrameElement","iframe","contentDocument","_a","body","cloneSingleNode","node","HTMLCanvasElement","HTMLVideoElement","HTMLIFrameElement","isSlotElement","tagName","toUpperCase","cloneChildren","nativeNode","clonedNode","children","assignedNodes","shadowRoot","childNodes","length","reduce","deferred","child","then","clonedChild","appendChild","Promise","resolve","cloneCSSStyle","targetStyle","style","sourceStyle","window","getComputedStyle","cssText","transformOrigin","forEach","name","value","getPropertyValue","endsWith","reducedFont","Math","floor","parseFloat","substring","setProperty","getPropertyPriority","cloneInputValue","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneSelectValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","getAttribute","decorate","Element","ensureSVGSymbols","clone","uses","querySelectorAll","processedDefs","i","use","id","exist","querySelector","definition","nodes","Object","values","ns","svg","createElementNS","position","overflow","display","defs","isRoot","filter"],"sources":["../src/clone-node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}