{"ast":null,"code":"function getContentFromDataUrl(dataURL) {\n  return dataURL.split(/,/)[1];\n}\n\nexport function isDataUrl(url) {\n  return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n  return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n  const res = await fetch(url, init);\n\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`);\n  }\n\n  const blob = await res.blob();\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n\n    reader.onloadend = () => {\n      try {\n        resolve(process({\n          res,\n          result: reader.result\n        }));\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    reader.readAsDataURL(blob);\n  });\n}\nconst cache = {};\n\nfunction getCacheKey(url, contentType, includeQueryParams) {\n  let key = url.replace(/\\?.*/, '');\n\n  if (includeQueryParams) {\n    key = url;\n  } // font resource\n\n\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '');\n  }\n\n  return contentType ? `[${contentType}]${key}` : key;\n}\n\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n  const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey];\n  } // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n\n\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n  }\n\n  let dataURL;\n\n  try {\n    const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, _ref => {\n      let {\n        res,\n        result\n      } = _ref;\n\n      if (!contentType) {\n        // eslint-disable-next-line no-param-reassign\n        contentType = res.headers.get('Content-Type') || '';\n      }\n\n      return getContentFromDataUrl(result);\n    });\n    dataURL = makeDataUrl(content, contentType);\n  } catch (error) {\n    dataURL = options.imagePlaceholder || '';\n    let msg = `Failed to fetch resource: ${resourceUrl}`;\n\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message;\n    }\n\n    if (msg) {\n      console.warn(msg);\n    }\n  }\n\n  cache[cacheKey] = dataURL;\n  return dataURL;\n}","map":{"version":3,"mappings":"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","names":["getContentFromDataUrl","dataURL","split","isDataUrl","url","search","makeDataUrl","content","mimeType","fetchAsDataURL","init","process","res","fetch","status","Error","blob","Promise","resolve","reject","reader","FileReader","onerror","onloadend","result","error","readAsDataURL","cache","getCacheKey","contentType","includeQueryParams","key","replace","test","resourceToDataURL","resourceUrl","options","cacheKey","cacheBust","Date","getTime","fetchRequestInit","headers","get","imagePlaceholder","msg","message","console","warn"],"sources":["../src/dataurl.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}